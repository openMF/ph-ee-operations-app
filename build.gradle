/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'eclipse'
    id 'org.springframework.boot' version '2.1.9.RELEASE'
}

repositories {
    maven {
        url = uri('https://repo.maven.apache.org/maven2')
    }
}

dependencies {
    implementation 'org.springframework.security:spring-security-jwt:1.1.0.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web:1.5.22.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-cache:1.5.22.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:1.5.22.RELEASE'
    implementation 'org.springframework.security:spring-security-crypto:4.2.15.RELEASE'
    implementation 'org.springframework.security.oauth:spring-security-oauth2:2.4.1.RELEASE'
    implementation 'org.json:json:20190722'
    implementation 'org.eclipse.persistence:org.eclipse.persistence.jpa:2.7.6'
    implementation 'org.hibernate:hibernate-jpamodelgen:5.4.17.Final'
    annotationProcessor 'org.hibernate:hibernate-jpamodelgen:5.4.17.Final'
    implementation 'joda-time:joda-time:2.10.6'
    implementation 'org.apache.commons:commons-lang3:3.3.2'
    implementation 'com.zaxxer:HikariCP:3.4.5'
    implementation 'mysql:mysql-connector-java:8.0.20'
    implementation 'com.googlecode.flyway:flyway-core:2.1.1'
    implementation 'net.sf.ehcache:ehcache:2.10.6'
    testImplementation 'junit:junit:4.11'
    implementation 'net.sf.supercsv:super-csv:2.4.0'
    implementation 'com.amazonaws:aws-java-sdk:1.11.486'
    implementation 'com.azure:azure-storage-blob:12.12.0'
    implementation 'commons-io:commons-io:2.4'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}

group = 'org.apache.fineract'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '1.8'


sourceSets {
    generated {
        java {
            srcDirs = ['src/generated/java']
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.annotationProcessorGeneratedSourcesDirectory = file("src/generated/java")
}
